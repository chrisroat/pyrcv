name: CI

on: [push, pull_request]

jobs:
  lint:
    name: Check lint
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements_dev.txt
      - name: Lint
        run: |
          make lint

  test:
    name: Run tests
    permissions:
      contents: read
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install all dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements_dev.txt
      - name: Test
        run: |
          make test

  build:
    name: Build distribution
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install -r requirements_dev.txt
      - name: Create distribution packages
        run: |
          make dist
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish:
    name: Publish to PyPI
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyrvc
    permissions:
      id-token: write # trusted publishing
    steps:
      - name: Download the distribution packages
        uses: actions/download-artifact@v4
        with:
            name: python-package-distributions
            path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  deploy:
    name: Deploy to App Engine
    needs:
      - publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Authenticate with Google
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/39603749578/locations/global/workloadIdentityPools/github-actions/providers/github-actions"
          service_account: "github-actions@rcv-tabulator.iam.gserviceaccount.com"
      - name: Deploy server code to appengine
        uses: google-github-actions/deploy-appengine@v2
        with:
          working_directory: server
          project_id: rcv-tabulator
          env_vars: |-
            SECRET_KEY=${{ secrets.SECRET_KEY }}
